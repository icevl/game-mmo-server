// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: proto/actionpb/action.proto

package actionpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	animationpb "server/proto/animationpb"
	interactpb "server/proto/interactpb"
	messagepb "server/proto/messagepb"
	objectpb "server/proto/objectpb"
	pingpb "server/proto/pingpb"
	soundpb "server/proto/soundpb"
	transformpb "server/proto/transformpb"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*Action_Transform
	//	*Action_TransformRotation
	//	*Action_Object
	//	*Action_ObjectBatch
	//	*Action_DestroyObject
	//	*Action_ObjectState
	//	*Action_ObjectStateBatch
	//	*Action_Message
	//	*Action_Interact
	//	*Action_Ping
	//	*Action_Pong
	//	*Action_PlaySound
	//	*Action_Animation
	//	*Action_Damage
	//	*Action_InteractWith
	//	*Action_InteractQueue
	//	*Action_Teleport
	Action isAction_Action `protobuf_oneof:"action"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_actionpb_action_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_proto_actionpb_action_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_proto_actionpb_action_proto_rawDescGZIP(), []int{0}
}

func (m *Action) GetAction() isAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *Action) GetTransform() *transformpb.Transform {
	if x, ok := x.GetAction().(*Action_Transform); ok {
		return x.Transform
	}
	return nil
}

func (x *Action) GetTransformRotation() *transformpb.TransformRotation {
	if x, ok := x.GetAction().(*Action_TransformRotation); ok {
		return x.TransformRotation
	}
	return nil
}

func (x *Action) GetObject() *objectpb.Object {
	if x, ok := x.GetAction().(*Action_Object); ok {
		return x.Object
	}
	return nil
}

func (x *Action) GetObjectBatch() *objectpb.ObjectBatch {
	if x, ok := x.GetAction().(*Action_ObjectBatch); ok {
		return x.ObjectBatch
	}
	return nil
}

func (x *Action) GetDestroyObject() *objectpb.DestroyObject {
	if x, ok := x.GetAction().(*Action_DestroyObject); ok {
		return x.DestroyObject
	}
	return nil
}

func (x *Action) GetObjectState() *objectpb.ObjectState {
	if x, ok := x.GetAction().(*Action_ObjectState); ok {
		return x.ObjectState
	}
	return nil
}

func (x *Action) GetObjectStateBatch() *objectpb.ObjectStateBatch {
	if x, ok := x.GetAction().(*Action_ObjectStateBatch); ok {
		return x.ObjectStateBatch
	}
	return nil
}

func (x *Action) GetMessage() *messagepb.Message {
	if x, ok := x.GetAction().(*Action_Message); ok {
		return x.Message
	}
	return nil
}

func (x *Action) GetInteract() *interactpb.Interact {
	if x, ok := x.GetAction().(*Action_Interact); ok {
		return x.Interact
	}
	return nil
}

func (x *Action) GetPing() *pingpb.Ping {
	if x, ok := x.GetAction().(*Action_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *Action) GetPong() *pingpb.Pong {
	if x, ok := x.GetAction().(*Action_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *Action) GetPlaySound() *soundpb.PlaySound {
	if x, ok := x.GetAction().(*Action_PlaySound); ok {
		return x.PlaySound
	}
	return nil
}

func (x *Action) GetAnimation() *animationpb.Animation {
	if x, ok := x.GetAction().(*Action_Animation); ok {
		return x.Animation
	}
	return nil
}

func (x *Action) GetDamage() *objectpb.Damage {
	if x, ok := x.GetAction().(*Action_Damage); ok {
		return x.Damage
	}
	return nil
}

func (x *Action) GetInteractWith() *interactpb.InteractWith {
	if x, ok := x.GetAction().(*Action_InteractWith); ok {
		return x.InteractWith
	}
	return nil
}

func (x *Action) GetInteractQueue() *interactpb.InteractQueue {
	if x, ok := x.GetAction().(*Action_InteractQueue); ok {
		return x.InteractQueue
	}
	return nil
}

func (x *Action) GetTeleport() *transformpb.Teleport {
	if x, ok := x.GetAction().(*Action_Teleport); ok {
		return x.Teleport
	}
	return nil
}

type isAction_Action interface {
	isAction_Action()
}

type Action_Transform struct {
	Transform *transformpb.Transform `protobuf:"bytes,1,opt,name=transform,proto3,oneof"`
}

type Action_TransformRotation struct {
	TransformRotation *transformpb.TransformRotation `protobuf:"bytes,2,opt,name=transformRotation,proto3,oneof"`
}

type Action_Object struct {
	Object *objectpb.Object `protobuf:"bytes,3,opt,name=object,proto3,oneof"`
}

type Action_ObjectBatch struct {
	ObjectBatch *objectpb.ObjectBatch `protobuf:"bytes,4,opt,name=objectBatch,proto3,oneof"`
}

type Action_DestroyObject struct {
	DestroyObject *objectpb.DestroyObject `protobuf:"bytes,5,opt,name=destroyObject,proto3,oneof"`
}

type Action_ObjectState struct {
	ObjectState *objectpb.ObjectState `protobuf:"bytes,6,opt,name=objectState,proto3,oneof"`
}

type Action_ObjectStateBatch struct {
	ObjectStateBatch *objectpb.ObjectStateBatch `protobuf:"bytes,7,opt,name=objectStateBatch,proto3,oneof"`
}

type Action_Message struct {
	Message *messagepb.Message `protobuf:"bytes,8,opt,name=message,proto3,oneof"`
}

type Action_Interact struct {
	Interact *interactpb.Interact `protobuf:"bytes,9,opt,name=interact,proto3,oneof"`
}

type Action_Ping struct {
	Ping *pingpb.Ping `protobuf:"bytes,10,opt,name=ping,proto3,oneof"`
}

type Action_Pong struct {
	Pong *pingpb.Pong `protobuf:"bytes,11,opt,name=pong,proto3,oneof"`
}

type Action_PlaySound struct {
	PlaySound *soundpb.PlaySound `protobuf:"bytes,12,opt,name=playSound,proto3,oneof"`
}

type Action_Animation struct {
	Animation *animationpb.Animation `protobuf:"bytes,13,opt,name=animation,proto3,oneof"`
}

type Action_Damage struct {
	Damage *objectpb.Damage `protobuf:"bytes,14,opt,name=damage,proto3,oneof"`
}

type Action_InteractWith struct {
	InteractWith *interactpb.InteractWith `protobuf:"bytes,15,opt,name=interactWith,proto3,oneof"`
}

type Action_InteractQueue struct {
	InteractQueue *interactpb.InteractQueue `protobuf:"bytes,16,opt,name=interactQueue,proto3,oneof"`
}

type Action_Teleport struct {
	Teleport *transformpb.Teleport `protobuf:"bytes,17,opt,name=teleport,proto3,oneof"`
}

func (*Action_Transform) isAction_Action() {}

func (*Action_TransformRotation) isAction_Action() {}

func (*Action_Object) isAction_Action() {}

func (*Action_ObjectBatch) isAction_Action() {}

func (*Action_DestroyObject) isAction_Action() {}

func (*Action_ObjectState) isAction_Action() {}

func (*Action_ObjectStateBatch) isAction_Action() {}

func (*Action_Message) isAction_Action() {}

func (*Action_Interact) isAction_Action() {}

func (*Action_Ping) isAction_Action() {}

func (*Action_Pong) isAction_Action() {}

func (*Action_PlaySound) isAction_Action() {}

func (*Action_Animation) isAction_Action() {}

func (*Action_Damage) isAction_Action() {}

func (*Action_InteractWith) isAction_Action() {}

func (*Action_InteractQueue) isAction_Action() {}

func (*Action_Teleport) isAction_Action() {}

var File_proto_actionpb_action_proto protoreflect.FileDescriptor

var file_proto_actionpb_action_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x70, 0x62, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x70, 0x62, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x70, 0x62, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70,
	0x69, 0x6e, 0x67, 0x70, 0x62, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x70, 0x62, 0x2f,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62, 0x2f, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5,
	0x07, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x48, 0x00, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x4b,
	0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x48,
	0x0a, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x69, 0x6e,
	0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x24, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75,
	0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x6d, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x08, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x17, 0x5a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_actionpb_action_proto_rawDescOnce sync.Once
	file_proto_actionpb_action_proto_rawDescData = file_proto_actionpb_action_proto_rawDesc
)

func file_proto_actionpb_action_proto_rawDescGZIP() []byte {
	file_proto_actionpb_action_proto_rawDescOnce.Do(func() {
		file_proto_actionpb_action_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_actionpb_action_proto_rawDescData)
	})
	return file_proto_actionpb_action_proto_rawDescData
}

var file_proto_actionpb_action_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_actionpb_action_proto_goTypes = []interface{}{
	(*Action)(nil),                        // 0: messages.Action
	(*transformpb.Transform)(nil),         // 1: messages.Transform
	(*transformpb.TransformRotation)(nil), // 2: messages.TransformRotation
	(*objectpb.Object)(nil),               // 3: messages.Object
	(*objectpb.ObjectBatch)(nil),          // 4: messages.ObjectBatch
	(*objectpb.DestroyObject)(nil),        // 5: messages.DestroyObject
	(*objectpb.ObjectState)(nil),          // 6: messages.ObjectState
	(*objectpb.ObjectStateBatch)(nil),     // 7: messages.ObjectStateBatch
	(*messagepb.Message)(nil),             // 8: messages.Message
	(*interactpb.Interact)(nil),           // 9: messages.Interact
	(*pingpb.Ping)(nil),                   // 10: messages.Ping
	(*pingpb.Pong)(nil),                   // 11: messages.Pong
	(*soundpb.PlaySound)(nil),             // 12: messages.PlaySound
	(*animationpb.Animation)(nil),         // 13: messages.Animation
	(*objectpb.Damage)(nil),               // 14: messages.Damage
	(*interactpb.InteractWith)(nil),       // 15: messages.InteractWith
	(*interactpb.InteractQueue)(nil),      // 16: messages.InteractQueue
	(*transformpb.Teleport)(nil),          // 17: messages.Teleport
}
var file_proto_actionpb_action_proto_depIdxs = []int32{
	1,  // 0: messages.Action.transform:type_name -> messages.Transform
	2,  // 1: messages.Action.transformRotation:type_name -> messages.TransformRotation
	3,  // 2: messages.Action.object:type_name -> messages.Object
	4,  // 3: messages.Action.objectBatch:type_name -> messages.ObjectBatch
	5,  // 4: messages.Action.destroyObject:type_name -> messages.DestroyObject
	6,  // 5: messages.Action.objectState:type_name -> messages.ObjectState
	7,  // 6: messages.Action.objectStateBatch:type_name -> messages.ObjectStateBatch
	8,  // 7: messages.Action.message:type_name -> messages.Message
	9,  // 8: messages.Action.interact:type_name -> messages.Interact
	10, // 9: messages.Action.ping:type_name -> messages.Ping
	11, // 10: messages.Action.pong:type_name -> messages.Pong
	12, // 11: messages.Action.playSound:type_name -> messages.PlaySound
	13, // 12: messages.Action.animation:type_name -> messages.Animation
	14, // 13: messages.Action.damage:type_name -> messages.Damage
	15, // 14: messages.Action.interactWith:type_name -> messages.InteractWith
	16, // 15: messages.Action.interactQueue:type_name -> messages.InteractQueue
	17, // 16: messages.Action.teleport:type_name -> messages.Teleport
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_proto_actionpb_action_proto_init() }
func file_proto_actionpb_action_proto_init() {
	if File_proto_actionpb_action_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_actionpb_action_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_actionpb_action_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Action_Transform)(nil),
		(*Action_TransformRotation)(nil),
		(*Action_Object)(nil),
		(*Action_ObjectBatch)(nil),
		(*Action_DestroyObject)(nil),
		(*Action_ObjectState)(nil),
		(*Action_ObjectStateBatch)(nil),
		(*Action_Message)(nil),
		(*Action_Interact)(nil),
		(*Action_Ping)(nil),
		(*Action_Pong)(nil),
		(*Action_PlaySound)(nil),
		(*Action_Animation)(nil),
		(*Action_Damage)(nil),
		(*Action_InteractWith)(nil),
		(*Action_InteractQueue)(nil),
		(*Action_Teleport)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_actionpb_action_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_actionpb_action_proto_goTypes,
		DependencyIndexes: file_proto_actionpb_action_proto_depIdxs,
		MessageInfos:      file_proto_actionpb_action_proto_msgTypes,
	}.Build()
	File_proto_actionpb_action_proto = out.File
	file_proto_actionpb_action_proto_rawDesc = nil
	file_proto_actionpb_action_proto_goTypes = nil
	file_proto_actionpb_action_proto_depIdxs = nil
}
